version: '3'

services:

  # Backend Nest.js
  nestjs:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres-db
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - POSTGRES_SYNC=false
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - APP_EXPIRES=${APP_EXPIRES}
      - APP_PORT=3000
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=8080
    depends_on:
      - postgres-db
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    networks:
      - koro_network

  
  react:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
    networks:
      - koro_network


  postgres-db:
    image: postgres:15.3
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - ./packages/backend/pgdata:/var/lib/postgresql/data
      - ./packages/backend/init-test-db.sql:/docker-entrypoint-initdb.d/init-test-db.sql
    ports:
      - "5432:5432"
    networks:
      - koro_network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 8080
    volumes:
      - ./packages/backend/docker/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres-db
    ports:
      - "8080:80"
    networks:
      - koro_network

networks:
  koro_network:
    driver: bridge
